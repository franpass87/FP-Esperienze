name: Build FP Esperienze Plugin

on:
  push:
    branches: [ "main" ]
    tags:
      - "v*"         # es: v1.0.1
  workflow_dispatch:

permissions:
  contents: write   # serve per creare release sui tag
  actions: read

jobs:
  build:
    name: Build plugin package
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
            php-version: '8.1'
            coverage: none
            tools: composer
            extensions: mbstring, intl, json, xml, curl, zip

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache/files
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Validate composer.json / composer.lock
        run: composer validate --no-check-publish

      - name: Install production dependencies
        run: composer install --no-dev --prefer-dist --optimize-autoloader

      - name: Determine plugin version
        id: get_version
        shell: bash
        run: |
          # Estrae il numero versione dal file principale
            if [[ ! -f "fp-esperienze.php" ]]; then
              echo "File principale fp-esperienze.php non trovato"; exit 1;
            fi
            VERSION=$(grep -i "^[[:space:]]*\\*\\s*Version:" fp-esperienze.php | head -1 | sed -E 's/.*Version:[[:space:]]*//')
            if [[ -z "$VERSION" ]]; then
              echo "Version non trovata nell'header"; exit 1;
            fi
            SLUG="fp-esperienze"
            ZIP_NAME="${SLUG}-v${VERSION}.zip"
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "slug=$SLUG" >> $GITHUB_OUTPUT
            echo "zip_name=$ZIP_NAME" >> $GITHUB_OUTPUT
            echo "Rilevata versione: $VERSION"

      - name: Build distributable package
        id: package
        run: |
          PACKAGE_PATH=$(tools/build-plugin-zip.sh \
            --slug "${{ steps.get_version.outputs.slug }}" \
            --version "${{ steps.get_version.outputs.version }}" \
            --zip-name "${{ steps.get_version.outputs.zip_name }}" \
            --out-dir "dist")
          echo "package_path=$PACKAGE_PATH" >> "$GITHUB_OUTPUT"
          ls -lh "$PACKAGE_PATH"

      - name: Compute checksum
        id: checksum
        run: |
          ZIP_PATH="${{ steps.package.outputs.package_path }}"
          CHECKSUM_PATH="${ZIP_PATH}.sha256"
          sha256sum "$ZIP_PATH" > "$CHECKSUM_PATH"
          echo "checksum_path=$CHECKSUM_PATH" >> "$GITHUB_OUTPUT"
          cat "$CHECKSUM_PATH"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.get_version.outputs.zip_name }}
          path: |
            ${{ steps.package.outputs.package_path }}
            ${{ steps.checksum.outputs.checksum_path }}
          if-no-files-found: error
          retention-days: 14

      - name: Create GitHub Release (only on tag)
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ steps.package.outputs.package_path }}
            ${{ steps.checksum.outputs.checksum_path }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
